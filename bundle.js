!function(t){var o={};function e(i){if(o[i])return o[i].exports;var r=o[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=o,e.d=function(t,o,i){e.o(t,o)||Object.defineProperty(t,o,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,o){if(1&o&&(t=e(t)),8&o)return t;if(4&o&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&o&&"string"!=typeof t)for(var r in t)e.d(i,r,function(o){return t[o]}.bind(null,r));return i},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,"a",o),o},e.o=function(t,o){return Object.prototype.hasOwnProperty.call(t,o)},e.p="",e(e.s=9)}([function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=function(){return function(t,o){this.row=t,this.col=o}}();o.Coordinate=i},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=e(0),r=function(){function t(){this.originalColor="rgb(66, 66, 66)",this.coordinates=[],this.setcolor(),this.done=!1,this.col=Math.floor(6*Math.random()+2),this.state=3,this.matrixOne=[[0,1,0],[0,1,0],[0,1,1]],this.matrixTwo=[[0,0,0],[1,1,1],[1,0,0]],this.matrixThree=[[1,1,0],[0,1,0],[0,1,0]],this.matrixFour=[[0,0,0],[0,0,1],[1,1,1]]}return t.prototype.leftPress=function(t,o){this.checkBelowWrapper(t,this.row,this.col-1)&&this.col--},t.prototype.rightPress=function(t,o){this.checkBelowWrapper(t,this.row,this.col+1)&&this.col++},t.prototype.upPress=function(t,o){var e=this,i=this.deleteCoordinates(t),r=this.state;this.incrementState(),this.checkBelowWrapper(t,this.row,this.col)||(this.state=r,i.forEach(function(o){e.drawToPoint(t,o)}))},t.prototype.downPress=function(t){this.checkBelowWrapper(t,this.row+1,this.col)&&this.row++},t.prototype.draw=function(t,o){return this.row>17?(this.done=!0,!0):this.checkBelowWrapper(t,this.row,this.col)?(this.deleteCoordinates(t),this.drawMatrixWrapper(t),!0):(this.done=!0,0!==this.row)},t.prototype.checkBelowWrapper=function(t,o,e){switch(this.state){case 1:return this.checkBelow(t,this.matrixOne,o,e);case 2:return this.checkBelow(t,this.matrixTwo,o,e);case 3:return this.checkBelow(t,this.matrixThree,o,e);case 4:return this.checkBelow(t,this.matrixFour,o,e)}},t.prototype.drawMatrix=function(t,o){for(var e=0;e<3;++e)for(var r=0;r<3;++r)1===o[e][r]&&this.drawToPoint(t,new i.Coordinate(this.row+e,this.col+r))},t.prototype.drawMatrixWrapper=function(t){switch(this.state){case 1:this.drawMatrix(t,this.matrixOne);break;case 2:this.drawMatrix(t,this.matrixTwo);break;case 3:this.drawMatrix(t,this.matrixThree);break;case 4:this.drawMatrix(t,this.matrixFour)}},t.prototype.checkBelow=function(t,o,e,i){var r=this,s=this.deleteCoordinates(t);return!!this.checkIfFits(e,i,t,o)||(s.forEach(function(o){r.drawToPoint(t,o)}),!1)},t.prototype.checkIfFits=function(t,o,e,i){for(var r=0;r<i.length;++r)for(var s=0;s<i[r].length;++s)if(1===i[r][s]){if(!e[t+r]||!e[t+r][o+s])return!1;if(!e[t+r][o+s].empty)return!1}return!0},t.prototype.decr=function(){this.row=this.row+1},t.prototype.setcolor=function(){switch(Math.floor(6*Math.random()+1)){case 0:this.color="rgb(11, 98, 237)";break;case 1:this.color="rgb(19, 237, 11)";break;case 2:this.color="rgb(249, 72, 90)";break;case 3:this.color="rgb(245, 255, 66)";break;case 4:this.color="rgb(66, 255, 248)";break;case 5:this.color="rgb(255, 66, 176)";break;case 6:this.color="rgb(255, 154, 66)"}},t.prototype.drawToPoint=function(t,o){t[o.row]&&t[o.row][o.col]?(t[o.row][o.col].color=this.color,t[o.row][o.col].empty=!1,this.coordinates.push(new i.Coordinate(o.row,o.col))):console.log("Trying to draw something that doesn't exists at boardmap["+o.row+"]["+o.col+"]")},t.prototype.deleteToPoint=function(t,o,e){t[o]&&t[o][e]?(t[o][e].color=this.originalColor,t[o][e].empty=!0):console.log("Trying to delete something that doesn't exists at boardmap["+o+"]["+e+"]")},t.prototype.deleteCoordinates=function(t){for(var o=[];this.coordinates.length>0;){var e=this.coordinates.pop();o.push(e),this.deleteToPoint(t,e.row,e.col)}return o},t.prototype.incrementState=function(){this.state<4?++this.state:this.state=1},t}();o.LPiece=r},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=e(0),r=function(){function t(){this.originalColor="rgb(66, 66, 66)",this.coordinates=[],this.setcolor(),this.done=!1,this.col=Math.floor(6*Math.random()+2),this.state=3,this.matrixOne=[[0,1,0],[0,1,0],[1,1,0],[0,0,0]],this.matrixTwo=[[0,0,0],[1,0,0],[1,1,1],[0,0,0]],this.matrixThree=[[0,1,1],[0,1,0],[0,1,0],[0,0,0]],this.matrixFour=[[0,0,0],[1,1,1],[0,0,1],[0,0,0]]}return t.prototype.checkIfFits=function(t,o){var e=[];switch(this.state){case 1:e=this.matrixOne;break;case 2:e=this.matrixTwo;break;case 3:e=this.matrixThree;break;case 4:e=this.matrixFour}for(var i=0;i<4;++i)for(var r=0;r<3;++r)if(1===e[i][r]){if(!o[t+i]||!o[this.row+i][this.col+r])return!1;if(!o[t+i][this.col+r].empty)return!1}return!0},t.prototype.draw=function(t,o){switch(this.state){case 1:case 2:case 3:case 4:return this.row>18?(this.done=!0,!0):this.checkBelow(t,0)?(this.done=!0,0!==this.row):(this.row>0&&this.deleteCoordinates(t),this.drawCurrent(t,o),!0)}},t.prototype.drawCurrent=function(t,o){switch(this.state){case 1:this.drawMatrix(t,this.matrixOne);break;case 2:this.drawMatrix(t,this.matrixTwo);break;case 3:this.drawMatrix(t,this.matrixThree);break;case 4:this.drawMatrix(t,this.matrixFour)}},t.prototype.drawMatrix=function(t,o){for(var e=0;e<3;++e)for(var r=0;r<3;++r)1===o[e][r]&&this.drawToPoint(t,new i.Coordinate(this.row+e,this.col+r))},t.prototype.checkRight=function(t,o){var e=!1;switch(this.state){case 1:e=this.checkRightOne(t,o);break;case 2:e=this.checkRightTwo(t,o);break;case 3:e=this.checkRightThree(t,o);break;case 4:e=this.checkRightFour(t,o)}return e},t.prototype.checkRightFour=function(t,o){var e=!1;return!t[this.row+1]||!t[this.row+1][this.col+3]||(!t[this.row+2]||!t[this.row+2][this.col+3]||(t[this.row+1][this.col+3].empty||(e=!0),t[this.row+2][this.col+3].empty||(e=!0),e))},t.prototype.checkRightThree=function(t,o){var e=!1;return!t[this.row][this.col+3]||(!t[this.row+1]||!t[this.row+1][this.col+2]||(!t[this.row+2]||!t[this.row+2][this.col+2]||(t[this.row][this.col+3].empty||(e=!0),t[this.row+1][this.col+2].empty||(e=!0),t[this.row+2][this.col+2].empty||(e=!0),e)))},t.prototype.checkRightTwo=function(t,o){if(!(t[this.row+1]&&t[this.row+1][this.col+1]&&t[this.row+2]&&t[this.row+2][this.col+3]))return!0;var e=!1;return t[this.row+1][this.col+1].empty||(e=!0),t[this.row+2][this.col+3].empty||(e=!0),e},t.prototype.checkRightOne=function(t,o){if(!(t[this.row]&&t[this.row][this.col+2]&&t[this.row+1]&&t[this.row+1][this.col+2]&&t[this.row+2]&&t[this.row+2][this.col+2]))return!0;var e=!1;return t[this.row][this.col+2].empty||(e=!0),t[this.row+1][this.col+2].empty||(e=!0),t[this.row+2][this.col+2].empty||(e=!0),e},t.prototype.checkLeft=function(t,o){var e=!1;switch(this.state){case 1:e=this.checkLeftOne(t,o);break;case 2:e=this.checkLeftTwo(t,o);break;case 3:e=this.checkLeftThree(t,o);break;case 4:e=this.checkLeftFour(t,o)}return e},t.prototype.checkLeftFour=function(t,o){if(!(t[this.row+1]&&t[this.row+1][this.col-1]&&t[this.row+2]&&t[this.row+2][this.col+1]))return!0;var e=!1;return!t[this.row+1][this.col-1].empty||(t[this.row+2][this.col+1].empty?e:(e=!0,!0))},t.prototype.checkLeftThree=function(t,o){if(!(t[this.row+1]&&t[this.row+1][this.col]&&t[this.row+2]&&t[this.row+2][this.col]))return!0;var e=!1;return t[this.row][this.col].empty||(e=!0),t[this.row+1][this.col].empty||(e=!0),t[this.row+2][this.col].empty||(e=!0),e},t.prototype.checkLeftTwo=function(t,o){if(!(t[this.row+1]&&t[this.row+1][this.col-1]&&t[this.row+2]&&t[this.row+2][this.col-1]))return!0;var e=!1;return t[this.row+1][this.col-1].empty||(e=!0),t[this.row+2][this.col-1].empty||(e=!0),e},t.prototype.checkLeftOne=function(t,o){var e=!1;return!(t[this.row+1]&&t[this.row+1][this.col]&&t[this.row+2]&&t[this.row+2][this.col-1])||(t[this.row][this.col].empty||(e=!0),t[this.row+1][this.col].empty||(e=!0),t[this.row+2][this.col-1].empty||(e=!0),e)},t.prototype.checkBelow=function(t,o){var e=!1;switch(this.state){case 1:e=this.checkBelowOne(t,o);break;case 2:e=this.checkBelowTwo(t,o);break;case 3:e=this.checkBelowThree(t,o);break;case 4:e=this.checkBelowFour(t,o)}return e},t.prototype.checkBelowFour=function(t,o){var e=!1;return!(t[this.row+1+o]&&t[this.row+1+o][this.col]&&t[this.row+1+o][this.col+1]&&t[this.row+2]&&t[this.row+2+o][this.col+2])||(t[this.row+1+o][this.col].empty||(e=!0),t[this.row+1+o][this.col+1].empty||(e=!0),t[this.row+2+o][this.col+2].empty||(e=!0),e)},t.prototype.checkBelowThree=function(t,o){if(!(t[this.row+2+o]&&t[this.row+2+o][this.col+1]&&t[this.row+o]&&t[this.row+o][this.col+2]))return!0;var e=!1;return t[this.row+2+o][this.col+1].empty||(e=!0),t[this.row+o][this.col+2].empty||(e=!0),e},t.prototype.checkBelowOne=function(t,o){var e=!1;return!(t[this.row+2+o]&&t[this.row+2+o][this.col]&&t[this.row+2+o]&&t[this.row+2+o][this.col+1])||(t[this.row+2+o][this.col].empty||(e=!0),t[this.row+2+o][this.col+1].empty||(e=!0),e)},t.prototype.checkBelowTwo=function(t,o){var e=!1;return!(t[this.row+2+o]&&t[this.row+2+o][this.col]&&t[this.row+2+o][this.col+1]&&t[this.row+2+o][this.col+2])||(t[this.row+2+o][this.col].empty||(e=!0),t[this.row+2+o][this.col+1].empty||(e=!0),t[this.row+2+o][this.col+2].empty||(e=!0),e)},t.prototype.decr=function(){this.row=this.row+1},t.prototype.setcolor=function(){switch(Math.floor(6*Math.random()+1)){case 0:this.color="rgb(11, 98, 237)";break;case 1:this.color="rgb(19, 237, 11)";break;case 2:this.color="rgb(249, 72, 90)";break;case 3:this.color="rgb(245, 255, 66)";break;case 4:this.color="rgb(66, 255, 248)";break;case 5:this.color="rgb(255, 66, 176)";break;case 6:this.color="rgb(255, 154, 66)"}},t.prototype.incrementState=function(){this.state<4?++this.state:this.state=1},t.prototype.drawToPoint=function(t,o){t[o.row]&&t[o.row][o.col]?(t[o.row][o.col].color=this.color,t[o.row][o.col].empty=!1,this.coordinates.push(new i.Coordinate(o.row,o.col))):console.log("Trying to draw something that doesn't exists at boardmap["+o.row+"]["+o.col+"]")},t.prototype.deleteToPoint=function(t,o,e){t[o]&&t[o][e]?(t[o][e].color=this.originalColor,t[o][e].empty=!0):console.log("Trying to delete something that doesn't exists at boardmap["+o+"]["+e+"]")},t.prototype.deleteCoordinates=function(t){for(;this.coordinates.length>0;){var o=this.coordinates.pop();this.deleteToPoint(t,o.row,o.col)}},t.prototype.leftPress=function(t,o){this.checkLeft(t,0)?this.deleteCoordinates(t):(this.deleteCoordinates(t),this.col--)},t.prototype.rightPress=function(t,o){this.checkRight(t,0)?this.deleteCoordinates(t):(this.deleteCoordinates(t),this.col++)},t.prototype.upPress=function(t,o){this.deleteCoordinates(t);var e=this.state;this.incrementState(),this.checkIfFits(this.row,t)||(this.state=e)},t.prototype.downPress=function(t){this.deleteCoordinates(t),this.checkIfFits(this.row+1,t)&&this.row++},t}();o.JPiece=r},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=e(0),r=function(){function t(){this.originalColor="rgb(66, 66, 66)",this.coordinates=[],this.flipped=Math.random()<.5,this.setcolor(),this.done=!1,this.col=Math.floor(6*Math.random()+2),this.state=1}return t.prototype.incrementState=function(){this.state<4?++this.state:this.state=1},t.prototype.drawToPoint=function(t,o){t[o.row]&&t[o.row][o.col]?(t[o.row][o.col].color=this.color,t[o.row][o.col].empty=!1,this.coordinates.push(new i.Coordinate(o.row,o.col))):console.log("Trying to draw something that doesn't exists at boardmap["+o.row+"]["+o.col+"]")},t.prototype.deleteToPoint=function(t,o,e){t[o]&&t[o][e]?(t[o][e].color=this.originalColor,t[o][e].empty=!0):console.log("Trying to delete something that doesn't exists at boardmap["+o+"]["+e+"]")},t.prototype.deleteCoordinates=function(t){for(;this.coordinates.length>0;){var o=this.coordinates.pop();this.deleteToPoint(t,o.row,o.col)}},t.prototype.drawSelf=function(t){this.drawToPoint(t,new i.Coordinate(this.row,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+2))},t.prototype.drawSelfFlipped=function(t){this.drawToPoint(t,new i.Coordinate(this.row+1,this.col)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+2)),this.drawToPoint(t,new i.Coordinate(this.row+2,this.col+1))},t.prototype.drawSelfRight=function(t){this.drawToPoint(t,new i.Coordinate(this.row,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+2)),this.drawToPoint(t,new i.Coordinate(this.row+2,this.col+1))},t.prototype.drawSelfLeft=function(t){this.drawToPoint(t,new i.Coordinate(this.row,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col)),this.drawToPoint(t,new i.Coordinate(this.row+2,this.col+1))},t.prototype.leftPress=function(t,o){switch(this.state){case 1:if(!(this.col>0)){this.deleteCoordinates(t);break}if(!this.checkLeftUp(t,0)){this.deleteCoordinates(t),this.col=--this.col;break}this.deleteCoordinates(t);break;case 2:if(this.col>-1&&!this.checkLeftRight(t,0)){this.deleteCoordinates(t),this.col=--this.col;break}this.deleteCoordinates(t);break;case 3:if(this.col>0){if(!this.checkLeftDown(t,0)){this.deleteCoordinates(t),this.col=--this.col;break}this.deleteCoordinates(t);break}this.deleteCoordinates(t);break;case 4:if(this.col>0){if(!this.checkLeftLeft(t,0)){this.deleteCoordinates(t),this.col=--this.col;break}this.deleteCoordinates(t);break}this.deleteCoordinates(t)}},t.prototype.rightPress=function(t,o){switch(this.state){case 1:if(this.col<7&&!this.checkRightUp(t,0)){this.deleteCoordinates(t),this.col=++this.col;break}this.deleteCoordinates(t);break;case 2:if(this.col<7&&!this.checkRightRight(t,0)){this.deleteCoordinates(t),this.col=++this.col;break}this.deleteCoordinates(t);break;case 3:if(this.col<7&&!this.checkRightDown(t,0)){this.deleteCoordinates(t),this.col=++this.col;break}this.deleteCoordinates(t);break;case 4:if(this.col<8&&!this.checkRightLeft(t,0)){this.deleteCoordinates(t),this.col=++this.col;break}this.deleteCoordinates(t)}},t.prototype.upPress=function(t,o){switch(this.state){case 1:this.deleteCoordinates(t),this.col<8&&(this.state=2);break;case 2:this.deleteCoordinates(t),this.col>-1&&(this.state=3);break;case 3:this.deleteCoordinates(t),this.state=4;break;case 4:this.deleteCoordinates(t),this.col<8&&(this.state=1)}},t.prototype.downPress=function(t){switch(this.state){case 1:this.row<18&&(this.checkBelowup(t,1)||(this.deleteCoordinates(t),++this.row));break;case 2:if(this.row<17){this.checkBelowRight(t,1)||(this.deleteCoordinates(t),++this.row);break}break;case 3:this.row<17&&(this.checkBelowDown(t,1)||(this.deleteCoordinates(t),++this.row));break;case 4:if(this.row<17){this.checkBelowLeft(t,1)||(this.deleteCoordinates(t),++this.row);break}}},t.prototype.checkLeftUp=function(t,o){var e=!1;return t[this.row+1][this.col-1].empty||(e=!0),t[this.row][this.col].empty||(e=!0),e},t.prototype.checkRightUp=function(t,o){var e=!1;return t[this.row+1][this.col+3].empty||(e=!0),t[this.row][this.col+2].empty||(e=!0),e},t.prototype.checkRightRight=function(t,o){var e=!1;return t[this.row][this.col+2].empty||(e=!0),t[this.row+1][this.col+3].empty||(e=!0),t[this.row+2][this.col+2].empty||(e=!0),e},t.prototype.checkLeftRight=function(t,o){var e=!1;return t[this.row][this.col].empty||(e=!0),t[this.row+1][this.col].empty||(e=!0),t[this.row+2][this.col].empty||(e=!0),e},t.prototype.checkRightLeft=function(t,o){var e=!1;return t[this.row][this.col+2].empty||(e=!0),t[this.row+1][this.col+2]||(e=!0),t[this.row+2][this.col+2]||(e=!0),e},t.prototype.checkLeftLeft=function(t,o){var e=!1;return t[this.row][this.col].empty||(e=!0),t[this.row+1][this.col-1].empty||(e=!0),t[this.row+2][this.col].empty||(e=!0),e},t.prototype.checkLeftDown=function(t,o){var e=!1;return t[this.row+1][this.col-1].empty||(e=!0),t[this.row+2][this.col].empty||(e=!0),e},t.prototype.checkRightDown=function(t,o){var e=!1;return t[this.row+1][this.col+3].empty||(e=!0),t[this.row+2][this.col+2].empty||(e=!0),e},t.prototype.checkBelowup=function(t,o){var e=!1;return t[this.row+1+o][this.col].empty||(e=!0),t[this.row+1+o][this.col+1].empty||(e=!0),t[this.row+1+o][this.col+2].empty||(e=!0),e},t.prototype.checkBelowDown=function(t,o){var e=!1;return t[this.row+1+o][this.col].empty||(e=!0),t[this.row+2+o][this.col+1].empty||(e=!0),t[this.row+1+o][this.col+2].empty||(e=!0),e},t.prototype.checkBelowLeft=function(t,o){var e=!1;return t[this.row+2+o][this.col+1].empty||(e=!0),t[this.row+1+o][this.col].empty||(e=!0),e},t.prototype.checkBelowRight=function(t,o){var e=!1;return t[this.row+2+o][this.col+1].empty||(e=!0),t[this.row+1+o][this.col+2].empty||(e=!0),e},t.prototype.draw=function(t,o){switch(this.state){case 1:if(this.row>18)return this.done=!0,!0;if(this.checkBelowup(t,0))return this.done=!0,0!==this.row;this.row>0&&this.deleteCoordinates(t),this.drawSelf(t);break;case 2:if(this.row>17)return this.done=!0,!0;if(this.row<17&&this.checkBelowRight(t,0))return this.done=!0,!0;if(this.checkBelowRight(t,0))return this.done=!0,!0;this.row>0&&this.deleteCoordinates(t),this.drawSelfRight(t);break;case 4:if(this.row>17)return this.done=!0,!0;if(this.row<17&&this.checkBelowLeft(t,0))return this.done=!0,!0;if(this.checkBelowLeft(t,0))return this.done=!0,!0;this.row>0&&this.deleteCoordinates(t),this.drawSelfLeft(t);break;case 3:if(this.row>17)return this.done=!0,!0;if(this.checkBelowDown(t,0))return this.done=!0,!0;this.row>0&&this.deleteCoordinates(t),this.drawSelfFlipped(t)}return!0},t.prototype.decr=function(){this.row=this.row+1},t.prototype.setcolor=function(){switch(Math.floor(6*Math.random()+1)){case 0:this.color="rgb(11, 98, 237)";break;case 1:this.color="rgb(19, 237, 11)";break;case 2:this.color="rgb(249, 72, 90)";break;case 3:this.color="rgb(245, 255, 66)";break;case 4:this.color="rgb(66, 255, 248)";break;case 5:this.color="rgb(255, 66, 176)";break;case 6:this.color="rgb(255, 154, 66)"}},t}();o.XPiece=r},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=e(0),r=function(){function t(){this.originalColor="rgb(66, 66, 66)",this.flipped=Math.random()<.5,this.setcolor(),this.done=!1,this.coordinates=[],this.col=Math.floor(3*Math.random()+2)}return t.prototype.drawToPoint=function(t,o){t[o.row]&&t[o.row][o.col]?(t[o.row][o.col].color=this.color,t[o.row][o.col].empty=!1,this.coordinates.push(new i.Coordinate(o.row,o.col))):console.log("Trying to draw something that doesn't exists at boardmap["+o.row+"]["+o.col+"]")},t.prototype.deleteToPoint=function(t,o,e){t[o]&&t[o][e]?(t[o][e].color=this.originalColor,t[o][e].empty=!0):console.log("Trying to delete something that doesn't exists at boardmap["+o+"]["+e+"]")},t.prototype.deleteCoordinates=function(t){for(;this.coordinates.length>0;){var o=this.coordinates.pop();this.deleteToPoint(t,o.row,o.col)}},t.prototype.draw=function(t,o){return 19==this.row?(this.done=!0,!0):-1!==this.row?0===this.row?(this.drawSelf(t),!0):1===this.row?(this.deleteCoordinates(t),this.drawSelf(t),!0):this.checkBelow(t,-1)?(this.done=!0,!0):(this.deleteCoordinates(t),this.drawSelf(t),!0):void this.drawFirstSelf(t)},t.prototype.drawFlipped=function(t,o){console.log("Don't need this method :")},t.prototype.drawNotFlipped=function(t,o){console.log("Also don't need this method ;")},t.prototype.decr=function(){this.row=this.row+1},t.prototype.drawSelf=function(t){this.drawToPoint(t,new i.Coordinate(this.row,this.col)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col)),this.drawToPoint(t,new i.Coordinate(this.row,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+1))},t.prototype.checkBelow=function(t,o){return!t[this.row+2+o][this.col].empty||!t[this.row+2+o][this.col+1].empty},t.prototype.drawFirstSelf=function(t){this.drawToPoint(t,new i.Coordinate(this.row,this.col)),this.drawToPoint(t,new i.Coordinate(this.row,this.col+1))},t.prototype.downPress=function(t){this.row<18&&(t[this.row+2][this.col].empty&&(t[this.row+2][this.col+1].empty&&(this.deleteCoordinates(t),++this.row),this.deleteCoordinates(t)),this.deleteCoordinates(t)),this.deleteCoordinates(t)},t.prototype.leftPress=function(t,o){0!==this.col?(this.col>0&&t[this.row][this.col-1].empty&&this.row<19&&(t[this.row+1][this.col-1].empty?(this.deleteCoordinates(t),--this.col):this.deleteCoordinates(t)),this.deleteCoordinates(t)):this.deleteCoordinates(t)},t.prototype.rightPress=function(t,o){9!==this.col&&(this.col<9&&t[this.row][this.col+2].empty&&(this.row<19?t[this.row+1][this.col+2].empty&&(this.deleteCoordinates(t),++this.col):this.deleteCoordinates(t)),this.deleteCoordinates(t))},t.prototype.upPress=function(t,o){this.deleteCoordinates(t)},t.prototype.setcolor=function(){switch(Math.floor(6*Math.random()+1)){case 0:this.color="rgb(11, 98, 237)";break;case 1:this.color="rgb(19, 237, 11)";break;case 2:this.color="rgb(249, 72, 90)";break;case 3:this.color="rgb(245, 255, 66)";break;case 4:this.color="rgb(66, 255, 248)";break;case 5:this.color="rgb(255, 66, 176)";break;case 6:this.color="rgb(255, 154, 66)"}},t}();o.OPiece=r},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=e(0),r=function(){function t(){this.originalColor="rgb(66, 66, 66)",this.flipped=!0,this.coordinates=[],this.setcolor(),this.done=!1,this.col=Math.floor(6*Math.random()+0)}return t.prototype.decr=function(){this.row=this.row+1},t.prototype.drawToPoint=function(t,o){t[o.row]&&t[o.row][o.col]?(t[o.row][o.col].color=this.color,t[o.row][o.col].empty=!1,this.coordinates.push(new i.Coordinate(o.row,o.col))):console.log("Trying to draw something that doesn't exists at boardmap["+o.row+"]["+o.col+"]")},t.prototype.deleteToPoint=function(t,o,e){t[o]&&t[o][e]?(t[o][e].color=this.originalColor,t[o][e].empty=!0):console.log("Trying to delete something that doesn't exists at boardmap["+o+"]["+e+"]")},t.prototype.deleteCoordinates=function(t){for(;this.coordinates.length>0;){var o=this.coordinates.pop();this.deleteToPoint(t,o.row,o.col)}},t.prototype.setcolor=function(){switch(Math.floor(6*Math.random()+1)){case 0:this.color="rgb(11, 98, 237)";break;case 1:this.color="rgb(19, 237, 11)";break;case 2:this.color="rgb(249, 72, 90)";break;case 3:this.color="rgb(245, 255, 66)";break;case 4:this.color="rgb(66, 255, 248)";break;case 5:this.color="rgb(255, 66, 176)";break;case 6:this.color="rgb(255, 154, 66)"}},t.prototype.leftPress=function(t,o){this.flipped?(this.col>=-1&&(this.checkLeftVertical(t)?this.deleteCoordinates(t):(this.deleteCoordinates(t),--this.col)),this.deleteCoordinates(t)):(this.col>=0&&(this.checkLeftHorizontal(t)||(this.deleteCoordinates(t),--this.col)),this.deleteCoordinates(t))},t.prototype.rightPress=function(t,o){this.flipped?this.col<11?this.checkRightVertical(t)?this.deleteCoordinates(t):(this.deleteCoordinates(t),++this.col):this.deleteCoordinates(t):this.col<6?this.checkRightHorizontal(t)?this.deleteCoordinates(t):(this.deleteCoordinates(t),++this.col):this.deleteCoordinates(t)},t.prototype.upPress=function(t,o){this.flipped?this.checkVerticalToHorizontal(t)?this.deleteCoordinates(t):(this.deleteCoordinates(t),this.flipped=!this.flipped):this.checkHorizontalToVertical(t)?this.deleteCoordinates(t):(this.deleteCoordinates(t),this.flipped=!this.flipped)},t.prototype.checkVerticalToHorizontal=function(t){return this.col>6||(-1===this.col||(!t[this.row+1][this.col].empty||(!t[this.row+1][this.col+2].empty||!t[this.row+1][this.col+3].empty)))},t.prototype.checkHorizontalToVertical=function(t){return this.row>17||(!t[this.row][this.col+1].empty||(!t[this.row+2][this.col+1].empty||!t[this.row+3][this.col+1].empty))},t.prototype.downPress=function(t){this.flipped?this.row<16&&(this.checkBelowVertical(t,1)||(this.deleteCoordinates(t),this.row++)):this.row<18&&(this.checkBelowHorizontal(t,0)||(this.deleteCoordinates(t),this.row++))},t.prototype.draw=function(t,o){return this.flipped?this.drawFlipped(t,o):this.drawNotFlipped(t,o)},t.prototype.drawVertical=function(t,o){this.drawToPoint(t,new i.Coordinate(this.row,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+2,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+3,this.col+1))},t.prototype.drawHorizontal=function(t,o){this.drawToPoint(t,new i.Coordinate(this.row+1,this.col)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+1)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+2)),this.drawToPoint(t,new i.Coordinate(this.row+1,this.col+3))},t.prototype.checkLeftVertical=function(t){var o=!1;if(this.col<0)return!0;for(var e=this.row;e<this.row+4;++e)t[e][this.col].empty||(o=!0);return o},t.prototype.checkRightVertical=function(t){var o=!1;if(this.col>7)return!0;for(var e=this.row;e<this.row+4;++e)t[e][this.col+2].empty||(o=!0);return o},t.prototype.checkRightHorizontal=function(t){return!t[this.row+1][this.col+4].empty},t.prototype.checkLeftHorizontal=function(t){return 0===this.col||!t[this.row+1][this.col-1].empty},t.prototype.checkBelowHorizontal=function(t,o){var e=!1;if(this.row+2+o===20)e=!0;else for(var i=this.col;i<this.col+4;++i)t[this.row+2+o][i].empty||(e=!0);return e},t.prototype.checkBelowVertical=function(t,o){return this.row+3===20||!t[this.row+3+o][this.col+1].empty},t.prototype.drawFlipped=function(t,o){return 0===this.row?this.checkBelowVertical(t,1)?(this.done=!0,!1):(this.drawVertical(t,o),!0):this.row<17?this.checkBelowVertical(t,0)?(this.done=!0,!0):(this.deleteCoordinates(t),this.drawVertical(t,o),!0):(this.done=!0,!0)},t.prototype.drawNotFlipped=function(t,o){return 0===this.row?this.checkBelowHorizontal(t,-1)?(this.done=!0,!1):(this.deleteCoordinates(t),this.drawHorizontal(t,o),!0):this.row<21?this.checkBelowHorizontal(t,-1)?(this.done=!0,!0):(this.deleteCoordinates(t),this.drawHorizontal(t,o),!0):(this.done=!0,!0)},t}();o.IPiece=r},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=e(5),r=e(4),s=e(3),h=e(2),n=e(1),c=function(){function t(t){this.originalColor="rgb(66, 66, 66)",this.initP(t)}return t.prototype.printBoard=function(t){for(var o=0;o<20;++o){for(var e="",i=0;i<10;++i)t[o][i].empty?e+="x":e+="o";console.log(e)}},t.prototype.initP=function(t){this.started=!1,this.speiceList=[],this.generateType(),this.player.row=-1,this.firstTime=!0,this.checkBoardForRows(t)},t.prototype.leftPress=function(t,o){this.player.leftPress(t,o),this.draw(t,o)},t.prototype.rightPress=function(t,o){this.player.rightPress(t,o),this.draw(t,o)},t.prototype.upPress=function(t,o){this.player.upPress(t,o),this.draw(t,o)},t.prototype.downPress=function(t,o){this.player.downPress(t),this.draw(t,o)},t.prototype.generateType=function(){switch(Math.floor(5*Math.random()+1)){case 1:this.kind="I";break;case 2:this.kind="0";break;case 3:this.kind="X";break;case 4:this.kind="J";break;case 5:this.kind="L"}"I"===this.kind?this.player=new i.IPiece:"0"===this.kind?this.player=new r.OPiece:"X"===this.kind?this.player=new s.XPiece:"J"===this.kind?this.player=new h.JPiece:"L"===this.kind&&(this.player=new n.LPiece)},t.prototype.draw=function(t,o){this.player.done&&(this.player=new i.IPiece);var e=this.player.draw(t,o);return this.player.done&&(this.player=new i.IPiece,this.initP(t)),e},t.prototype.decr=function(){this.player.decr()},t.prototype.checkBoardForRows=function(t){for(var o=19;o>-1;o--){for(var e=!0,i=9;i>-1;i--)t[o][i].empty&&(e=!1);if(e){for(var r=o;r>1;--r)for(var s=0;s<10;++s)t[r][s].empty=t[r-1][s].empty,t[r][s].color=t[r-1][s].color;for(i=0;i<10;i++)t[0][i].empty=!0,t[0][i].color=this.originalColor;this.checkBoardForRows(t)}}},t}();o.TPiece=c},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=function(){function t(t,o,e){this.color=t,this.left=o,this.top=e}return t.prototype.draw=function(t,o){t.fillStyle=this.color,t.fillRect(this.left+2+o,this.top+2+60,38,38)},t}();o.Piece=i},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=e(7),r=e(6),s=function(){function t(){this.canvas=document.querySelector(".myCanvas"),this.backgroundColor="rgb(38, 37, 37)",this.boardmap=[],this.zeroBoard(),this.initBoard(),this.gameInProgress=!0,this.t=new r.TPiece(this.boardmap);var t=this.getCenter();this.left=t-200,this.canvas.addEventListener("touchstart",function(o){var e=this.getTouchPos(this.canvas,o);console.log("Touching"),e.x>t?this.t.rightPress(this.boardmap,this.left):e.x<t&&this.t.leftPress(this.boardmap,this.left)},!1)}return t.prototype.getTouchPos=function(t,o){var e=t.getBoundingClientRect();return{x:o.touches[0].clientX-e.left,y:o.touches[0].clientY-e.top}},t.prototype.getPiece=function(){return this.t},t.prototype.getCenter=function(){return Math.floor(this.width/2)},t.prototype.keyPress=function(t){"38"==t.keyCode?this.t.upPress(this.boardmap,this.left):"40"==t.keyCode?this.t.downPress(this.boardmap,this.left):"37"==t.keyCode?this.t.leftPress(this.boardmap,this.left):"39"==t.keyCode&&this.t.rightPress(this.boardmap,this.left)},t.prototype.decrTime=function(){this.gameInProgress&&(this.t.decr(),this.t.draw(this.boardmap,this.left)||(this.gameInProgress=!1))},t.prototype.zeroBoard=function(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.width=window.innerWidth,this.height=window.innerHeight,this.ctx=this.canvas.getContext("2d")},t.prototype.initBoard=function(){var t=this.getCenter()-200;this.left=t;for(var o=0;o<20;o++){for(var e=[],r=0;r<10;++r){var s=new i.Piece("rgb(66, 66, 66)",40*r,40*o);s.empty=!0,e.push(s)}this.boardmap.push(e),e=[]}},t.prototype.drawBoard=function(){this.zeroBoard(),this.ctx.fillStyle=this.backgroundColor,this.ctx.fillRect(0,0,this.width,this.height);var t=this.getCenter()-200;this.left=t,this.ctx.strokeStyle="rgb(255, 255, 255)",this.ctx.lineWidth=1,this.ctx.strokeRect(t,60,400,800),this.drawLines(t);for(var o=0,e=this.boardmap;o<e.length;o++)for(var i=0,r=e[o];i<r.length;i++){r[i].draw(this.ctx,t)}},t.prototype.drawLines=function(t){this.ctx.strokeStyle="rgb(91, 89, 89)";for(var o=40;o<400;o+=40)this.ctx.moveTo(t+o,60),this.ctx.lineTo(t+o,860),this.ctx.stroke();for(o=60;o<860;o+=40)this.ctx.moveTo(t,o),this.ctx.lineTo(t+400,o),this.ctx.stroke()},t}();o.Board=s},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=new(e(8).Board);window.setInterval(function(){i.drawBoard()},20),window.setInterval(function(){i.decrTime()},400);window.addEventListener("keydown",function(t){i.keyPress(t)},!1),window.addEventListener("gamepadconnected",function(t){console.log("Gamepad connected at index %d: %s. %d buttons, %d axes.",t.gamepad.index,t.gamepad.id,t.gamepad.buttons.length,t.gamepad.axes.length)}),window.onresize=function(t){i.drawBoard()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,