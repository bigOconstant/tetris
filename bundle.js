!function(t){var o={};function i(r){if(o[r])return o[r].exports;var e=o[r]={i:r,l:!1,exports:{}};return t[r].call(e.exports,e,e.exports,i),e.l=!0,e.exports}i.m=t,i.c=o,i.d=function(t,o,r){i.o(t,o)||Object.defineProperty(t,o,{enumerable:!0,get:r})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,o){if(1&o&&(t=i(t)),8&o)return t;if(4&o&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&o&&"string"!=typeof t)for(var e in t)i.d(r,e,function(o){return t[o]}.bind(null,e));return r},i.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(o,"a",o),o},i.o=function(t,o){return Object.prototype.hasOwnProperty.call(t,o)},i.p="",i(i.s=5)}([function(t,o,i){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=function(){function t(){this.originalColor="rgb(66, 66, 66)",this.flipped=Math.random()<.5,this.setcolor(),this.done=!1,this.col=Math.floor(3*Math.random()+2)}return t.prototype.draw=function(t,o){return 19==this.row?(this.done=!0,!0):-1!==this.row?0===this.row?(this.drawSelf(t),!0):1===this.row?(this.deleteFirstSelf(t),this.drawSelf(t),!0):t[this.row+1][this.col].empty&&t[this.row+1][+this.col].empty?(this.deletePrevSelf(t),this.drawSelf(t),!0):(this.done=!0,!0):void this.drawFirstSelf(t)},t.prototype.drawFlipped=function(t,o){console.log("Don't need this method :")},t.prototype.drawNotFlipped=function(t,o){console.log("Also don't need this method ;")},t.prototype.decr=function(){this.row=this.row+1},t.prototype.deleteSelf=function(t){t[this.row][this.col].color=this.originalColor,t[this.row+1][this.col].color=this.originalColor,t[this.row][this.col+1].color=this.originalColor,t[this.row+1][this.col+1].color=this.originalColor,t[this.row][this.col].empty=!0,t[this.row+1][this.col].empty=!0,t[this.row][this.col+1].empty=!0,t[this.row+1][this.col+1].empty=!0},t.prototype.deletePrevSelf=function(t){t[this.row-2][this.col].color=this.originalColor,t[this.row-1][this.col].color=this.originalColor,t[this.row-2][this.col+1].color=this.originalColor,t[this.row-1][this.col+1].color=this.originalColor,t[this.row-2][this.col].empty=!0,t[this.row-1][this.col].empty=!0,t[this.row-2][this.col+1].empty=!0,t[this.row-1][this.col+1].empty=!0},t.prototype.deleteFirstSelf=function(t){t[this.row][this.col].color=this.originalColor,t[this.row][this.col].empty=!0,t[this.row][this.col+1].color=this.originalColor,t[this.row][this.col+1].empty=!0,t[this.row-1][this.col].color=this.originalColor,t[this.row-1][this.col].empty=!0,t[this.row-1][this.col+1].color=this.originalColor,t[this.row-1][this.col+1].empty=!0},t.prototype.drawSelf=function(t){t[this.row][this.col].color=this.color,t[this.row+1][this.col].color=this.color,t[this.row][this.col+1].color=this.color,t[this.row+1][this.col+1].color=this.color,t[this.row][this.col].empty=!1,t[this.row+1][this.col].empty=!1,t[this.row][this.col+1].empty=!1,t[this.row+1][this.col+1].empty=!1},t.prototype.drawFirstSelf=function(t){t[this.row][this.col].color=this.color,t[this.row][this.col].empty=!1,t[this.row][this.col+1].color=this.color,t[this.row][this.col+1].empty=!1},t.prototype.downPress=function(t){this.row<18&&(t[this.row+2][this.col].empty&&(t[this.row+2][this.col+1].empty&&(this.deleteSelf(t),++this.row),this.deleteSelf(t)),this.deleteSelf(t)),this.deleteSelf(t)},t.prototype.leftPress=function(t,o){0!==this.col?(this.col>0&&t[this.row][this.col-1].empty&&this.row<19&&(t[this.row+1][this.col-1].empty?(this.deleteSelf(t),--this.col):this.deleteSelf(t)),this.deleteSelf(t)):this.deleteSelf(t)},t.prototype.rightPress=function(t,o){9!==this.col&&(this.col<9&&t[this.row][this.col+2].empty&&(this.row<19?t[this.row+1][this.col+2].empty&&(this.deleteSelf(t),++this.col):this.deleteSelf(t)),this.deleteSelf(t))},t.prototype.upPress=function(t,o){this.deleteSelf(t)},t.prototype.setcolor=function(){switch(Math.floor(6*Math.random()+1)){case 0:this.color="rgb(11, 98, 237)";break;case 1:this.color="rgb(19, 237, 11)";break;case 2:this.color="rgb(249, 72, 90)";break;case 3:this.color="rgb(245, 255, 66)";break;case 4:this.color="rgb(66, 255, 248)";break;case 5:this.color="rgb(255, 66, 176)";break;case 6:this.color="rgb(255, 154, 66)"}},t}();o.OPiece=r},function(t,o,i){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=function(){function t(){this.originalColor="rgb(66, 66, 66)",this.flipped=Math.random()<.5,this.setcolor(),this.done=!1,this.col=Math.floor(6*Math.random()+0)}return t.prototype.decr=function(){this.row=this.row+1},t.prototype.setcolor=function(){switch(Math.floor(6*Math.random()+1)){case 0:this.color="rgb(11, 98, 237)";break;case 1:this.color="rgb(19, 237, 11)";break;case 2:this.color="rgb(249, 72, 90)";break;case 3:this.color="rgb(245, 255, 66)";break;case 4:this.color="rgb(66, 255, 248)";break;case 5:this.color="rgb(255, 66, 176)";break;case 6:this.color="rgb(255, 154, 66)"}},t.prototype.leftPress=function(t,o){if(this.flipped){for(var i=0;i<4;i++)t[this.row+i][this.col].color=this.originalColor,t[this.row+i][this.col].empty=!0;var r=!0;if(this.col>0)for(i=0;i<4;++i)0==t[this.row+i][this.col-1].empty&&(r=!1);this.col>0&&r&&--this.col}else{for(i=0;i<4;i++)t[this.row][this.col+i].color=this.originalColor,t[this.row][this.col+i].empty=!0;this.col>0&&t[this.row][this.col-1].empty&&--this.col}},t.prototype.rightPress=function(t,o){if(this.flipped){if(this.col<9){for(var i=0;i<4;i++)t[this.row+i][this.col].color=this.originalColor,t[this.row+i][this.col].empty=!0;var r=!0;if(this.col<9){for(i=0;i<4;++i)0==t[this.row+i][this.col+1].empty&&(r=!1);this.col<9&&r&&++this.col}}}else if(this.col<6){for(i=0;i<4;i++)t[this.row][this.col+i].color=this.originalColor,t[this.row][this.col+i].empty=!0;this.col<6&&t[this.row][this.col+4].empty&&++this.col}},t.prototype.upPress=function(t,o){if(this.flipped){if(this.col>0&&this.col<8&&this.row<17&&t[this.row][this.col-1].empty&&t[this.row][this.col+1].empty&&t[this.row][this.col+2].empty){for(var i=0;i<4;++i)t[this.row+i][this.col].color=this.originalColor,t[this.row+i][this.col].empty=!0;this.flipped=!this.flipped}}else{var r=!0;for(i=0;i<4;++i)t[this.row][this.col+i].color=this.originalColor,t[this.row][this.col+i].empty=!0;this.row>15&&(r=!1);for(i=0;i<4;++i)t[this.row+i][this.col].empty||(r=!1);if(r){this.flipped=!this.flipped;for(i=0;i<4;++i)t[this.row][this.col+i].color=this.originalColor,t[this.row][this.col+i].empty=!0;for(i=0;i<4;++i)t[this.row+i][this.col].color=this.originalColor,t[this.row+i][this.col].empty=!0}}},t.prototype.downPress=function(t){console.log("Not Implemented")},t.prototype.draw=function(t,o){return this.flipped?this.drawFlipped(t,o):this.drawNotFlipped(t,o)},t.prototype.drawVertical=function(){},t.prototype.drawFlipped=function(t,o){if(0===this.row)for(var i=0;i<4;i++)if(!t[this.row+i][this.col].empty){for(var r=0;r<i;++r)t[this.row+r][this.col].color=this.color,t[this.row+r][this.col].empty=!1;return!1}if(t[this.row]&&t[this.row+1]&&t[this.row+2]&&t[this.row+3]){t[this.row-1]&&(t[this.row-1][this.col].color=this.originalColor,t[this.row-1][this.col].empty=!0);for(i=0;i<4;i++)t[this.row+i][this.col].empty&&(t[this.row+i][this.col].color=this.color,t[this.row+i][this.col].empty=!1);return t[this.row+4]&&t[this.row+4][this.col].empty&&!(this.row<15&&!t[this.row+4][this.col].empty)||(this.done=!0,!0)}if(!t[this.row+3])return this.row=0,this.col=Math.floor(10*Math.random()+0),this.done=!0,!0},t.prototype.drawNotFlipped=function(t,o){if(0===this.row){t[this.row][this.col].empty;for(var i=0;i<4;i++)if(!t[this.row][this.col+i].empty){for(var r=0;r<i;++r)t[this.row][this.col+r].color=this.color,t[this.row][this.col+r].empty=!1;return!1}}if(t[this.row]&&t[this.row][this.col]&&t[this.row][this.col+1]&&t[this.row][this.col+2]&&t[this.row][this.col+3]){if(t[this.row-1])for(i=0;i<4;i++)t[this.row-1][this.col+i].color=this.originalColor,t[this.row-1][this.col+i].empty=!0;for(i=0;i<4;i++)t[this.row][this.col+i].color=this.color,t[this.row][this.col+i].empty=!1;for(i=0;i<4;++i)if(this.row<19&&!t[this.row+1][this.col+i].empty)return this.row=0,this.col=0,this.done=!0,!0;return!0}if(!t[this.row+1])return this.done=!0,!0},t}();o.IPiece=r},function(t,o,i){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=i(1),e=i(0),s=function(){function t(t){this.originalColor="rgb(66, 66, 66)",this.initP(t)}return t.prototype.printBoard=function(t){for(var o=0;o<20;++o){for(var i="",r=0;r<10;++r)t[o][r].empty?i+="x":i+="o";console.log(i)}},t.prototype.initP=function(t){this.started=!1,this.speiceList=[],this.generateType(),this.player.row=-1,this.firstTime=!0,this.checkBoardForRows(t)},t.prototype.leftPress=function(t,o){this.player.leftPress(t,o),this.draw(t,o)},t.prototype.rightPress=function(t,o){this.player.rightPress(t,o),this.draw(t,o)},t.prototype.upPress=function(t,o){this.player.upPress(t,o),this.draw(t,o)},t.prototype.downPress=function(t,o){this.player.downPress(t),this.draw(t,o)},t.prototype.generateType=function(){switch(Math.floor(2*Math.random()+1)){case 1:this.kind="I";break;case 2:this.kind="0"}"I"===this.kind?this.player=new r.IPiece:"0"===this.kind&&(this.player=new e.OPiece)},t.prototype.draw=function(t,o){this.player.done&&(this.player=new r.IPiece);var i=this.player.draw(t,o);return this.player.done&&(this.player=new r.IPiece,this.initP(t)),i},t.prototype.decr=function(){this.player.decr()},t.prototype.checkBoardForRows=function(t){for(var o=19;o>-1;o--){for(var i=!0,r=9;r>-1;r--)t[o][r].empty&&(i=!1);if(i){for(var e=o;e>1;--e)for(var s=0;s<10;++s)t[e][s].empty=t[e-1][s].empty,t[e][s].color=t[e-1][s].color;for(r=0;r<10;r++)t[0][r].empty=!0,t[0][r].color=this.originalColor;this.checkBoardForRows(t)}}},t}();o.TPiece=s},function(t,o,i){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=function(){function t(t,o,i){this.color=t,this.left=o,this.top=i}return t.prototype.draw=function(t,o){t.fillStyle=this.color,t.fillRect(this.left+2+o,this.top+2+60,38,38)},t}();o.Piece=r},function(t,o,i){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=i(3),e=i(2),s=function(){function t(){this.canvas=document.querySelector(".myCanvas"),this.backgroundColor="rgb(38, 37, 37)",this.boardmap=[],this.zeroBoard(),this.initBoard(),this.gameInProgress=!0,this.t=new e.TPiece(this.boardmap);var t=this.getCenter();this.left=t-200}return t.prototype.getPiece=function(){return this.t},t.prototype.getCenter=function(){return Math.floor(this.width/2)},t.prototype.keyPress=function(t){"38"==t.keyCode?this.t.upPress(this.boardmap,this.left):"40"==t.keyCode?this.t.downPress(this.boardmap,this.left):"37"==t.keyCode?this.t.leftPress(this.boardmap,this.left):"39"==t.keyCode&&this.t.rightPress(this.boardmap,this.left)},t.prototype.decrTime=function(){this.gameInProgress&&(this.t.decr(),this.t.draw(this.boardmap,this.left)||(this.gameInProgress=!1))},t.prototype.zeroBoard=function(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.width=window.innerWidth,this.height=window.innerHeight,this.ctx=this.canvas.getContext("2d")},t.prototype.initBoard=function(){var t=this.getCenter()-200;this.left=t;for(var o=0;o<20;o++){for(var i=[],e=0;e<10;++e){var s=new r.Piece("rgb(66, 66, 66)",40*e,40*o);s.empty=!0,i.push(s)}this.boardmap.push(i),i=[]}},t.prototype.drawBoard=function(){this.zeroBoard(),this.ctx.fillStyle=this.backgroundColor,this.ctx.fillRect(0,0,this.width,this.height);var t=this.getCenter()-200;this.left=t,this.ctx.strokeStyle="rgb(255, 255, 255)",this.ctx.lineWidth=1,this.ctx.strokeRect(t,60,400,800),this.drawLines(t);for(var o=0,i=this.boardmap;o<i.length;o++)for(var r=0,e=i[o];r<e.length;r++){e[r].draw(this.ctx,t)}},t.prototype.drawLines=function(t){this.ctx.strokeStyle="rgb(91, 89, 89)";for(var o=40;o<400;o+=40)this.ctx.moveTo(t+o,60),this.ctx.lineTo(t+o,860),this.ctx.stroke();for(o=60;o<860;o+=40)this.ctx.moveTo(t,o),this.ctx.lineTo(t+400,o),this.ctx.stroke()},t}();o.Board=s},function(t,o,i){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=new(i(4).Board);window.setInterval(function(){r.drawBoard()},20),window.setInterval(function(){r.decrTime()},400);window.addEventListener("keydown",function(t){r.keyPress(t)},!1),window.addEventListener("gamepadconnected",function(t){console.log("Gamepad connected at index %d: %s. %d buttons, %d axes.",t.gamepad.index,t.gamepad.id,t.gamepad.buttons.length,t.gamepad.axes.length)}),window.onresize=function(t){r.drawBoard()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,